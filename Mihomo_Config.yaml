# BASE: https://github.com/Repcz/Tool/blob/X/Clash/Meta/Mihomo.yaml
#
# 基于 Repcz/Tool 项目修改
#
# 官方文档：https://wiki.metacubex.one/
#
# 以 '#' 或 '//' 开头的配置文件行为注释行
#
# Mihomo Version ≥ 1.8.4
#
# 最后更新时间: 2024-11-17 

# 订阅更新和延迟测试相关参数
p: &p {type: http, interval: 86400, health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 1800}}
# 代理提供商配置
proxy-providers:
  Subscribe1: {<<: *p, path: ./proxy-providers/Sub1.yaml, url: " "}
    # 在此将" "替换为你的机场订阅，推荐使用base64或者node list
    # Sub-Store生成的链接,可以直接替换上述url引号中的部分,具体见Sub-Store教程        
  #Subscribe2: {<<: *p, path: ./proxy-providers/Sub2.yaml, url: " "}
  #Subscribe3: {<<: *p, path: ./proxy-providers/Sub3.yaml, url: " "}
  #Subscribe4: {<<: *p, path: ./proxy-providers/Sub4.yaml, url: " "}

#------------------------基础配置------------------------#
mixed-port: 7890            # 混合端口：HTTP(S)和SOCKS5共用端口
tcp-concurrent: true        # TCP并发：允许并发连接TCP,提高并发性能
unified-delay: true         # 统一延迟：统一显示节点延迟
allow-lan: true            # 局域网连接：允许其他设备经过本机代理
bind-address: "*"          # 监听地址：*表示绑定所有IP地址
find-process-mode: strict  # 进程匹配模式：strict严格,off关闭,always总是
ipv6: false               # IPv6开关：是否启用IPv6支持

# 运行模式(任选其一):
# rule: 规则模式 - 根据规则匹配来选择代理
# global: 全局模式 - 全部流量走代理
# direct: 直连模式 - 全部流量不走代理
mode: rule

# 日志等级(按详细程度排序):
# debug: 调试
# info: 信息
# warning: 警告
# error: 错误
# silent: 静默
log-level: info

geodata-mode: true          # GEO模式：true使用geoip.dat数据库,false使用mmdb数据库
geox-url:
  geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"
  asn: "https://mirror.ghproxy.com/https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

# 外部控制设置
external-controller: 0.0.0.0:9090  # 外部控制器监听地址
# external-ui: folder               # 外部控制器UI目录
# secret: ""                        # 外部控制器密码

profile:
  store-selected: true 
  store-fake-ip: true  

#嗅探 enable: false 关闭，开启请修改
sniffer:
  enable: false
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"

#------------------------DNS 配置------------------------#
dns:
  cache-algorithm: arc
  enable: true
  prefer-h3: true
  listen: 0.0.0.0:53
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - "+.lan"
    - "connect.rom.miui.com"
    - "+.miwifi.com"
    - "+.ntp.org"
    - "+.u-tools.cn"
    - "+.mediatek.com"
    - "+.cfprefer1.xyz"
    - "+.wetab.link"
    # QQ
    - "localhost.ptlogin2.qq.com"
    - "localhost.sec.qq.com"
    # WeChat
    - "localhost.work.weixin.qq.com"
    - "+.weixin.qq.com"
    - "+.wechat.com"
    # Windows
    - "time.windows.com"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "+.wpsmail.net"
    - "+.henzanapp.com"
    - "+.pconline.com.cn"
  proxy-server-nameserver:
    - 1.1.1.1
  nameserver:
    - 119.29.29.29
    - 8.8.8.8

###建立锚点
    
# 策略组引用相关参数
pg: &pg {type: select, proxies: [🚀 节点选择, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇸🇬 狮城节点, 🇯🇵 日本节点,  🇨🇳 台湾节点, ♻️ 自动选择, DIRECT]}

# 自动选择策略组：选取延迟最低节点
auto: &auto {type: url-test, url: https://www.gstatic.com/generate_204, interval: 300, tolerance: 50, include-all: true}

# 手动选择策略组：手动选择想要的节点/策略组
select: &select {type: select, include-all: true}

# 故障回退策略组：策略组将按顺序选择你列表中第一个可用的节点
fallback: &fallback {type: fallback, url: http://www.gstatic.com/generate_204, interval: 300, include-all: true}

# 负载均衡策略组：不同的请求将使用不同的代理节点
load-balance: &load-balance {type: load-balance, strategy: consistent-hashing, url: http://www.gstatic.com/generate_204, interval: 300, include-all: true}

# classical规则相关
c: &c {type: http, behavior: classical, interval: 86400}

# domain规则相关
d: &d {type: http, behavior: domain, interval: 86400}

# ipcidr规则相关
i: &i {type: http, behavior: ipcidr, interval: 86400}

###结束


proxy-groups:

  #分流分组

  - {name: 🚀 节点选择, type: select, proxies: [🚀 手动切换, ♻️ 自动选择,🇭🇰 香港节点, 🇺🇸 美国节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇨🇳 台湾节点, DIRECT]}

  - {name: 🚀 手动切换, <<: *select}

  - {name: ♻️ 自动选择, <<: *auto}

  - {name: 🧚 AI, <<: *pg}

  - {name: 📲 Telegram, <<: *pg}

  - {name: 📹 Youtube, <<: *pg}

  - {name: 🎞 Netflix, <<: *pg}

  - {name: 📺 Bahamut, type: select, proxies: [🇨🇳 台湾节点, 🇭🇰 香港节点, 🚀 节点选择, DIRECT]}

  - {name: 🎬 Emby, <<: *pg}

  - {name: 📼 Bilibili, type: select, proxies: [DIRECT, 🇭🇰 香港节点, 🇨🇳 台湾节点,🚀 节点选择]}

  - {name: 🌍 国外媒体, <<: *pg}

  - {name: Ⓜ️ 微软服务, <<: *pg}

  #- {name: 📢 谷歌FCM, <<: *pg}

  - {name: 🍎 苹果服务, <<: *pg}

  - {name: 🎮 游戏平台, <<: *pg}

  - {name: 🎯 全球直连, type: select, proxies: [DIRECT, 🚀 节点选择]}

  - {name: 🐟 兜底分流, <<: *pg}

  #节点地区分组

  - {name: 🇭🇰 香港节点, <<: *auto, filter: "^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}

  - {name: 🇺🇸 美国节点, <<: *auto, filter: "^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}

  - {name: 🇸🇬 狮城节点, <<: *auto, filter: "^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}

  - {name: 🇯🇵 日本节点, <<: *auto, filter: "^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$"}

  - {name: 🇨🇳 台湾节点, <<: *auto, filter: "(?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)"}



# 规则提供商配置 - 优化版
rule-providers:

 # 直连
 Inside: {<<: *c, format: text, path: ./rule-providers/Inside.list,  url: https://raw.githubusercontent.com/cutethotw/ClashRule/main/Rule/Inside.list}
 LocalAreaNetwork: {<<: *c, format: text, path: ./rule-providers/LocalAreaNetwork.list,  url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list}
 UnBan: {<<: *c, format: text, path: ./rule-providers/UnBan.list,  url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list}

 # AI平台
 AI: {<<: *c, format: text, path: ./rule-providers/AI.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/AI.list}

 # 微软服务 
 #OneDrive: {<<: *c, format: text, path: ./rule-providers/OneDrive.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/OneDrive.list}
 #Github: {<<: *c, format: text, path: ./rule-providers/Github.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Github.list}
 Microsoft: {<<: *c, format: text, path: ./rule-providers/Microsoft.list,  url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.list}

 # 谷歌FCM /CN
 GoogleFCM: {<<: *c, format: text, path: ./rule-providers/GoogleFCM.list,  url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleFCM.list}
 GoogleCN: {<<: *c, format: text, path: ./rule-providers/GoogleCN.list,  url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/GoogleCN.list}

 # 苹果服务
 Apple: {<<: *c, format: text, path: ./rule-providers/Apple.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Apple.list}

 # 电报消息
 Telegram: {<<: *c, format: text, path: ./rule-providers/Telegram.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Telegram.list}

 # 游戏下载
 SteamCN: {<<: *c, format: text, path: ./rule-providers/steamCN.list,  url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/SteamCN/SteamCN.list}

 # 游戏平台
 Game: {<<: *c, format: text, path: ./rule-providers/Game.list,  url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.list}

 # 媒体
 YouTube: {<<: *c, format: text, path: ./rule-providers/YouTube.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/YouTube.list}
 Netflix: {<<: *c, format: text, path: ./rule-providers/Netflix.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Netflix.list}
 Emby: {<<: *c,format: text, path: ./rule-providers/Emby.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Emby.list}
 Bahamut: {<<: *c,format: text, path: ./rule-providers/Bahamut.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Bahamut.list}
 
 BilibiliHMT: {<<: *c, format: text, path: ./rule-providers/BilibiliHMT.list,  url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list}
 BiliBili: {<<: *c, format: text, path: ./rule-providers/BiliBili.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Bilibili.list}

 # 国际媒体
 ProxyMedia: {<<: *c, format: text, path: ./rule-providers/ProxyMedia.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/ProxyMedia.list}

 # 中国大陆
 ChinaDomain: {<<: *d, format: text, path: ./rule-providers/ChinaDomain.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/ChinaDomain.list}
 ChinaCompanyIp: {<<: *i, format: text, path: ./rule-providers/ChinaCompanyIp.list,  url: https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list}

 # 下载服务
 Download: {<<: *c, format: text, path: ./rule-providers/Download.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Download.list}

 # 代理网站
 ProxyGFW: {<<: *c, format: text, path: ./rule-providers/ProxyGFW.list,  url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/ProxyGFW.list}
 


# 规则配置 
rules:
  # 优先处理
  - DOMAIN-SUFFIX,windowsupdate.com,DIRECT

  # 本地局域网
  - DOMAIN-SUFFIX,local,DIRECT
  - DOMAIN-SUFFIX,localhost,DIRECT
  - IP-CIDR,127.0.0.0/8,DIRECT
  - IP-CIDR,172.16.0.0/12,DIRECT
  - IP-CIDR,192.168.0.0/16,DIRECT
  - IP-CIDR,10.0.0.0/8,DIRECT
  - IP-CIDR,17.0.0.0/8,DIRECT
  - IP-CIDR,100.64.0.0/10,DIRECT
  - IP-CIDR,224.0.0.0/4,DIRECT
  - IP-CIDR6,fe80::/10,DIRECT

  # 应用分流
  - RULE-SET,Inside,🎯 全球直连
  - RULE-SET,LocalAreaNetwork,🎯 全球直连
  - RULE-SET,UnBan,🎯 全球直连
  - RULE-SET,AI,🧚 AI
  - RULE-SET,Microsoft,Ⓜ️ 微软服务
  - RULE-SET,GoogleFCM,🎯 全球直连
  - RULE-SET,GoogleCN,🎯 全球直连
  - RULE-SET,Apple,🍎 苹果服务
  - RULE-SET,Telegram,📲 Telegram
  - RULE-SET,SteamCN,🎯 全球直连
  - RULE-SET,Game,🎮 游戏平台
  - RULE-SET,YouTube,📹 Youtube
  - RULE-SET,Netflix,🎞 Netflix
  - RULE-SET,Emby,🎬 Emby
  - RULE-SET,Bahamut,📺 Bahamut
  - RULE-SET,BilibiliHMT,📼 Bilibili
  - RULE-SET,BiliBili,📼 Bilibili
  - RULE-SET,ProxyMedia,🌍 国外媒体
  - RULE-SET,ProxyGFW,🚀 节点选择
  - RULE-SET,ChinaDomain,🎯 全球直连
  - RULE-SET,ChinaCompanyIp,🎯 全球直连
  - RULE-SET,Download,🎯 全球直连

  # 自定义规则
  #- PROCESS-NAME,Thunder,DIRECT

  # 地域规则
  #- GEOIP,LAN,🎯 全球直连
  - GEOIP,CN,🎯 全球直连

  # 兜底规则
  - MATCH,🐟 兜底分流
